@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 6,
    "backwardDepth": 6,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "schoolManagementSystem.Main",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_1320710170 { 
   	label=schoolManagementSystem
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   Address1320710170[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Address</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   district: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   postcode: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   street: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Admission1320710170[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Admission</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ newAdmission(name: String, student_id: String, _class: String, section: String, group: String, gender: String, email_adress: String, mobile_number: String, blood_group: String, address: Address, date_of_birth: Date, date_of_admission: Date)</TD></TR>
<TR><TD ALIGN="LEFT" >+ newAdmission(name: String, student_id: String, _class: String, section: String, gender: String, email_adress: String, mobile_number: String, blood_group: String, address: Address, date_of_birth: Date, date_of_admission: Date)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Appointment1320710170[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Appointment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ committee(empapt: EmployeeAppointment)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Date1320710170[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Date</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   day: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   month: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   year: int [1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EmployeeAppointment1320710170[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EmployeeAppointment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ appoint()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FinancialDepartment1320710170[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FinancialDepartment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   ifeeCollection: IFeeCollection [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   ipayment: IPayment [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ payMonthlySalaryToStaff(staff_id: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ payMonthlySalaryToTeacher(teacher_id: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ payStipendToStudent(student_id: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ receiveMonthlyFeeFromStudent(student_id: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Main1320710170[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Main</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ main(args: String[])</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PaymentService1320710170[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PaymentService</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ collectFee(amount: int, trxID: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ payAmount(amount: int, trxID: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Person1320710170[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Person</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   address: Address [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   blood_group: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   date_of_birth: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   date_of_joining: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   email_adress: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   gender: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   mobile_number: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   name: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   unique_id: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Staff1320710170[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Staff</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   pay_scale: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   post_name: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ showInformation()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StaffAppointment1320710170[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StaffAppointment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   staff: Staff [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ appoint()</TD></TR>
<TR><TD ALIGN="LEFT" >+ determinePayScale(): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StaffList1320710170[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StaffList</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   staffArrayList: ArrayList&lt;Staff&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addStaff(staff: Staff)</TD></TR>
<TR><TD ALIGN="LEFT" >+ findStaffById(staff_id: String): Staff</TD></TR>
<TR><TD ALIGN="LEFT" >+ getIndexOfStaff(staff: Staff): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeStaff(staff: Staff)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Student1320710170[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Student</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   _class: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   group: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   section: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ showInformation()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StudentList1320710170[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StudentList</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   studentArrayList: ArrayList&lt;Student&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addStudent(student: Student)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addStudent(student: Student, group: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ findStudentById(student_id: String): Student</TD></TR>
<TR><TD ALIGN="LEFT" >+ getIndexOfStudent(student: Student): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeStudent(student: Student)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Teacher1320710170[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Teacher</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   allowance: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   pay_scale: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   post_name: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   teaching_subject: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ showInformation()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TeacherAppointment1320710170[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TeacherAppointment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   teacher: Teacher [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ appoint()</TD></TR>
<TR><TD ALIGN="LEFT" >+ calculateAllowance(): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ determinePayScale(): int</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TeacherList1320710170[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TeacherList</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   teacherArrayList: ArrayList&lt;Teacher&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addTeacher(teacher: Teacher)</TD></TR>
<TR><TD ALIGN="LEFT" >+ findTeacherById(teacher_id: String): Teacher</TD></TR>
<TR><TD ALIGN="LEFT" >+ getIndexOfTeacher(teacher: Teacher): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeTeacher(teacher: Teacher)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

'edges    
Appointment1320710170 -> EmployeeAppointment1320710170[label="committee() -> appoint()"];
EmployeeAppointment1320710170 -> StaffAppointment1320710170[arrowhead=none, arrowtail=empty, dir=both];
EmployeeAppointment1320710170 -> TeacherAppointment1320710170[arrowhead=none, arrowtail=empty, dir=both];
FinancialDepartment1320710170 -> PaymentService1320710170[arrowhead=none];
FinancialDepartment1320710170 -> StaffList1320710170[label="payMonthlySalaryToStaff() -> findStaffById()"];
FinancialDepartment1320710170 -> TeacherList1320710170[label="payMonthlySalaryToTeacher() -> findTeacherById()"];
Main1320710170 -> Admission1320710170[label="main() -> newAdmission()"];
Main1320710170 -> Staff1320710170[label="main() -> showInformation()"];
Main1320710170 -> StaffList1320710170[label="main() -> findStaffById()"];
Main1320710170 -> Student1320710170[label="main() -> showInformation()"];
Main1320710170 -> StudentList1320710170[label="main() -> findStudentById()"];
Main1320710170 -> Teacher1320710170[label="main() -> showInformation()"];
Main1320710170 -> TeacherList1320710170[label="main() -> findTeacherById()"];
Person1320710170 -> Address1320710170[label="address
[0..1]"];
Person1320710170 -> Date1320710170[label="date_of_birth
[0..1]"];
Person1320710170 -> Date1320710170[label="date_of_joining
[0..1]"];
Person1320710170 -> Staff1320710170[arrowhead=none, arrowtail=empty, dir=both];
Person1320710170 -> Student1320710170[arrowhead=none, arrowtail=empty, dir=both];
Person1320710170 -> Teacher1320710170[arrowhead=none, arrowtail=empty, dir=both];
StaffAppointment1320710170 -> Staff1320710170[label="staff
[0..1]"];
StaffAppointment1320710170 -> StaffList1320710170[label="appoint() -> addStaff()"];
StaffList1320710170 -> Staff1320710170[label="staffArrayList
[0..*]"];
StudentList1320710170 -> Student1320710170[label="studentArrayList
[0..*]"];
TeacherAppointment1320710170 -> StaffAppointment1320710170[arrowhead=none];
TeacherAppointment1320710170 -> Teacher1320710170[label="teacher
[0..1]"];
TeacherAppointment1320710170 -> TeacherList1320710170[label="appoint() -> addTeacher()"];
TeacherList1320710170 -> Teacher1320710170[label="teacherArrayList
[0..*]"];
    
}
@enduml